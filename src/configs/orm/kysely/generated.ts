/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Json = ColumnType<JsonValue, string, string>;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export interface Attempts {
  candidateId: string;
  createdAt: Date | null;
  hasEnded: Generated<number>;
  id: string;
  order: number;
  score: Generated<number>;
  secondsSpent: Generated<number>;
  testId: string | null;
  updatedAt: Date | null;
}

export interface AttemptsAnswerQuestions {
  attemptId: string | null;
  chosenOption: number;
  createdAt: Date | null;
  id: Generated<number>;
  questionId: number | null;
  updatedAt: Date | null;
}

export interface ExamParticipants {
  candidateId: string;
  createdAt: Date | null;
  id: string;
  testId: string;
  updatedAt: Date | null;
}

export interface ExamTests {
  closeDate: Date;
  createdAt: Date | null;
  isAllowedToSeeOtherResults: Generated<number>;
  isAnswerVisible: Generated<number>;
  numberOfAttemptsAllowed: Generated<number>;
  openDate: Date;
  password: string | null;
  roomId: string;
  testId: string;
  updatedAt: Date | null;
}

export interface Feedbacks {
  comment: string;
  createdAt: Date | null;
  practiceTestId: string;
  problems: Json;
  rating: number;
  updatedAt: Date | null;
}

export interface PracticeTests {
  createdAt: Date | null;
  difficulty: "easy" | "hard" | "medium";
  numberOfOptions: number;
  numberOfQuestions: number;
  outlines: Json;
  tags: Json;
  testId: string;
  updatedAt: Date | null;
}

export interface Questions {
  correctOption: number;
  id: Generated<number>;
  options: Json;
  points: number;
  testId: string | null;
  text: string;
}

export interface Templates {
  createdAt: Date | null;
  description: string;
  difficulty: string;
  id: string;
  name: string;
  numberOfOptions: number;
  numberOfQuestions: number;
  outlines: Json;
  tags: Json;
  title: string;
  updatedAt: Date | null;
  userId: string;
}

export interface Tests {
  authorId: string;
  createdAt: Date | null;
  description: string;
  id: string;
  language: Generated<string>;
  minutesToAnswer: number;
  mode: string;
  title: string;
  updatedAt: Date | null;
}

export interface DB {
  Attempts: Attempts;
  Attempts_answer_Questions: AttemptsAnswerQuestions;
  ExamParticipants: ExamParticipants;
  ExamTests: ExamTests;
  Feedbacks: Feedbacks;
  PracticeTests: PracticeTests;
  Questions: Questions;
  Templates: Templates;
  Tests: Tests;
}
