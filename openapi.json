{
	"info": {
		"version": "1.0.0",
		"title": "My API",
		"description": "This is the API"
	},
	"servers": [
		{
			"url": "http://localhost:8080/api",
			"description": "Localhost"
		}
	],
	"openapi": "3.1.0",
	"security": [
		{
			"userId": []
		},
		{
			"roleId": []
		},
		{
			"Authorization": []
		}
	],
	"components": {
		"securitySchemes": {
			"userId": {
				"type": "apiKey",
				"name": "x-user-id",
				"in": "header",
				"description": "User ID for authentication"
			},
			"roleId": {
				"type": "apiKey",
				"name": "x-role-id",
				"in": "header",
				"description": "Role ID for authentication"
			},
			"Authorization": {
				"type": "apiKey",
				"name": "authorization",
				"in": "header",
				"description": "Bearer token for authentication"
			}
		},
		"schemas": {
			"AttemptCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"order": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"testId": {
						"type": "string"
					},
					"candidateId": {
						"type": "string"
					},
					"hasEnded": {
						"type": "boolean"
					},
					"secondsSpent": {
						"type": "integer",
						"minimum": 0
					},
					"score": {
						"type": "integer",
						"minimum": 0
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"order",
					"testId",
					"candidateId",
					"hasEnded",
					"secondsSpent",
					"score",
					"createdAt",
					"updatedAt"
				]
			},
			"AttemptInfoSchema": {
				"allOf": [
					{
						"$ref": "#/components/schemas/AttemptCoreSchema"
					},
					{
						"type": "object",
						"properties": {}
					}
				]
			},
			"AnswerCoreSchema": {
				"type": "object",
				"properties": {
					"attemptId": {
						"type": "string"
					},
					"questionId": {
						"type": "number"
					},
					"chosenOption": {
						"type": "number"
					}
				},
				"required": [
					"attemptId",
					"questionId",
					"chosenOption"
				]
			},
			"QuestionCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"testId": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"options": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"points": {
						"type": "number"
					},
					"correctOption": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"testId",
					"text",
					"options",
					"points",
					"correctOption"
				]
			},
			"QuestionToDoSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "number"
					},
					"testId": {
						"type": "string"
					},
					"text": {
						"type": "string"
					},
					"options": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"points": {
						"type": "number"
					}
				},
				"required": [
					"id",
					"testId",
					"text",
					"options",
					"points"
				]
			},
			"TestCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"authorId": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"minutesToAnswer": {
						"type": "number",
						"minimum": 1,
						"maximum": 10000
					},
					"language": {
						"type": "string"
					},
					"mode": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"authorId",
					"title",
					"description",
					"minutesToAnswer",
					"language",
					"mode"
				]
			},
			"TestInfoSchema": {
				"allOf": [
					{
						"$ref": "#/components/schemas/TestCoreSchema"
					},
					{
						"type": "object",
						"properties": {
							"createdAt": {
								"type": "string"
							},
							"updatedAt": {
								"type": "string"
							}
						},
						"required": [
							"createdAt",
							"updatedAt"
						]
					}
				]
			},
			"TestAggregateSchema": {
				"type": "object",
				"properties": {
					"numberOfQuestions": {
						"type": "number"
					},
					"totalPoints": {
						"type": "number"
					}
				},
				"required": [
					"numberOfQuestions",
					"totalPoints"
				]
			},
			"TestQuestionsAggregateSchema": {
				"type": "object",
				"properties": {
					"questionId": {
						"type": "number"
					},
					"numberOfAnswers": {
						"type": "number"
					},
					"numberOfCorrectAnswers": {
						"type": "number"
					},
					"averagePoints": {
						"type": "number"
					}
				},
				"required": [
					"questionId",
					"numberOfAnswers",
					"numberOfCorrectAnswers",
					"averagePoints"
				]
			},
			"CreateTestBodySchema": {
				"type": "object",
				"properties": {
					"test": {
						"type": "object",
						"properties": {
							"title": {
								"type": "string"
							},
							"description": {
								"type": "string"
							},
							"minutesToAnswer": {
								"type": "number",
								"minimum": 1,
								"maximum": 10000
							},
							"language": {
								"type": "string"
							},
							"mode": {
								"type": "string"
							}
						},
						"required": [
							"title",
							"description",
							"minutesToAnswer",
							"language",
							"mode"
						]
					},
					"questions": {
						"type": "array",
						"items": {
							"type": "object",
							"properties": {
								"text": {
									"type": "string"
								},
								"options": {
									"type": "array",
									"items": {
										"type": "string"
									}
								},
								"points": {
									"type": "number"
								},
								"correctOption": {
									"type": "number"
								}
							},
							"required": [
								"text",
								"options",
								"points",
								"correctOption"
							]
						}
					}
				},
				"required": [
					"test",
					"questions"
				]
			},
			"UpdateTestBodySchema": {
				"allOf": [
					{
						"$ref": "#/components/schemas/CreateTestBodySchema"
					},
					{
						"type": "object",
						"properties": {
							"testId": {
								"type": "string"
							}
						},
						"required": [
							"testId"
						]
					}
				]
			},
			"ExamTestCoreSchema": {
				"type": "object",
				"properties": {
					"testId": {
						"type": "string"
					},
					"hasPassword": {
						"type": "boolean"
					},
					"roomId": {
						"type": "string"
					},
					"numberOfAttemptsAllowed": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"isAnswerVisible": {
						"type": "boolean"
					},
					"isAllowedToSeeOtherResults": {
						"type": "boolean"
					},
					"openDate": {
						"type": [
							"string",
							"null"
						]
					},
					"closeDate": {
						"type": [
							"string",
							"null"
						]
					}
				},
				"required": [
					"testId",
					"hasPassword",
					"roomId",
					"numberOfAttemptsAllowed",
					"isAnswerVisible",
					"isAllowedToSeeOtherResults",
					"openDate",
					"closeDate"
				]
			},
			"ExamTestInfoSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"authorId": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"minutesToAnswer": {
						"type": "number",
						"minimum": 1,
						"maximum": 10000
					},
					"language": {
						"type": "string"
					},
					"mode": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"hasPassword": {
						"type": "boolean"
					},
					"roomId": {
						"type": "string"
					},
					"numberOfAttemptsAllowed": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"isAnswerVisible": {
						"type": "boolean"
					},
					"isAllowedToSeeOtherResults": {
						"type": "boolean"
					},
					"openDate": {
						"type": [
							"string",
							"null"
						]
					},
					"closeDate": {
						"type": [
							"string",
							"null"
						]
					}
				},
				"required": [
					"id",
					"authorId",
					"title",
					"description",
					"minutesToAnswer",
					"language",
					"mode",
					"createdAt",
					"updatedAt",
					"hasPassword",
					"roomId",
					"numberOfAttemptsAllowed",
					"isAnswerVisible",
					"isAllowedToSeeOtherResults",
					"openDate",
					"closeDate"
				]
			},
			"PracticeTestCoreSchema": {
				"type": "object",
				"properties": {
					"testId": {
						"type": "string"
					},
					"difficulty": {
						"type": "string"
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"numberOfQuestions": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"numberOfOptions": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"outlines": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"testId",
					"difficulty",
					"tags",
					"numberOfQuestions",
					"numberOfOptions",
					"outlines"
				]
			},
			"FeedbackCoreSchema": {
				"type": "object",
				"properties": {
					"practiceTestId": {
						"type": "string"
					},
					"rating": {
						"type": "number",
						"minimum": 1,
						"maximum": 10
					},
					"problems": {
						"type": "array",
						"items": {
							"type": "string",
							"enum": [
								"inaccurate",
								"un-related",
								"poor content",
								"incomplete",
								"repeated",
								"error",
								"other",
								""
							]
						},
						"default": []
					},
					"comment": {
						"type": "string"
					}
				},
				"required": [
					"practiceTestId",
					"rating",
					"comment"
				]
			},
			"PracticeTestInfoSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"authorId": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"minutesToAnswer": {
						"type": "number",
						"minimum": 1,
						"maximum": 10000
					},
					"language": {
						"type": "string"
					},
					"mode": {
						"type": "string"
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					},
					"difficulty": {
						"type": "string"
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"numberOfQuestions": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"numberOfOptions": {
						"type": "integer",
						"exclusiveMinimum": 0
					},
					"outlines": {
						"type": "array",
						"items": {
							"type": "string"
						}
					}
				},
				"required": [
					"id",
					"authorId",
					"title",
					"description",
					"minutesToAnswer",
					"language",
					"mode",
					"createdAt",
					"updatedAt",
					"difficulty",
					"tags",
					"numberOfQuestions",
					"numberOfOptions",
					"outlines"
				]
			},
			"TemplateCoreSchema": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string"
					},
					"userId": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"title": {
						"type": "string"
					},
					"description": {
						"type": "string"
					},
					"language": {
						"type": "string"
					},
					"minutesToAnswer": {
						"type": "number",
						"minimum": 1,
						"maximum": 10000
					},
					"difficulty": {
						"type": "string"
					},
					"tags": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"numberOfQuestions": {
						"type": "number"
					},
					"numberOfOptions": {
						"type": "number"
					},
					"outlines": {
						"type": "array",
						"items": {
							"type": "string"
						}
					},
					"createdAt": {
						"type": "string"
					},
					"updatedAt": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"userId",
					"name",
					"title",
					"description",
					"language",
					"minutesToAnswer",
					"difficulty",
					"tags",
					"numberOfQuestions",
					"numberOfOptions",
					"outlines",
					"createdAt",
					"updatedAt"
				]
			}
		},
		"parameters": {}
	},
	"paths": {
	},
	"webhooks": {}
}